param (
    [Parameter(Mandatory = $true)]
    [string]$Path
)

function Get-ReadableSize($bytes) {
    switch ($bytes) {
        {$_ -ge 1PB} {"{0:N2} PB" -f ($bytes / 1PB); break}
        {$_ -ge 1TB} {"{0:N2} TB" -f ($bytes / 1TB); break}
        {$_ -ge 1GB} {"{0:N2} GB" -f ($bytes / 1GB); break}
        {$_ -ge 1MB} {"{0:N2} MB" -f ($bytes / 1MB); break}
        {$_ -ge 1KB} {"{0:N2} KB" -f ($bytes / 1KB); break}
        default     {"$bytes Bytes"}
    }
}

if (-Not (Test-Path -Path $Path -PathType Container)) {
    Write-Error "The path '$Path' does not exist or is not a folder."
    exit
}

Write-Host "`nCalculating folder sizes under: $Path`n"

$allFolders = @((Get-Item -Path $Path), (Get-ChildItem -Path $Path -Recurse -Directory))
$total = $allFolders.Count
$index = 1

$folderSizes = foreach ($folder in $allFolders) {
    Write-Progress -Activity "Calculating Folder Sizes" `
                   -Status "Processing folder $index of $total: $($folder.FullName)" `
                   -PercentComplete (($index / $total) * 100)

    $folderPath = $folder.FullName
    $size = (Get-ChildItem -Path $folderPath -Recurse -File -ErrorAction SilentlyContinue | Measure-Object -Property Length -Sum).Sum
    $index++

    [PSCustomObject]@{
        Folder     = $folder.Name
        Path       = $folderPath
        'TotalSize' = Get-ReadableSize($size)
    }
}

Write-Progress -Activity "Calculating Folder Sizes" -Completed

$folderSizes | Sort-Object 'TotalSize' -Descending | Format-Table -AutoSize
