param (
    [Parameter(Mandatory = $true)]
    [string]$Path
)

function Get-ReadableSize($bytes) {
    switch ($bytes) {
        {$_ -ge 1PB} {"{0:N2} PB" -f ($bytes / 1PB); break}
        {$_ -ge 1TB} {"{0:N2} TB" -f ($bytes / 1TB); break}
        {$_ -ge 1GB} {"{0:N2} GB" -f ($bytes / 1GB); break}
        {$_ -ge 1MB} {"{0:N2} MB" -f ($bytes / 1MB); break}
        {$_ -ge 1KB} {"{0:N2} KB" -f ($bytes / 1KB); break}
        default     {"$bytes Bytes"}
    }
}

if (-Not (Test-Path -Path $Path -PathType Container)) {
    Write-Error "The path '$Path' does not exist or is not a folder."
    exit
}

Write-Host "`n=== FOLDER SIZES ===`n"

# Include the root folder as well
$allFolders = @((Get-Item -Path $Path), (Get-ChildItem -Path $Path -Recurse -Directory))

$folderSizes = $allFolders | ForEach-Object {
    $folderPath = $_.FullName
    $size = (Get-ChildItem -Path $folderPath -Recurse -File -ErrorAction SilentlyContinue | Measure-Object -Property Length -Sum).Sum
    [PSCustomObject]@{
        Folder = $_.Name
        Path = $folderPath
        'Total Size' = Get-ReadableSize($size)
    }
}

$folderSizes | Sort-Object 'Total Size' -Descending | Format-Table -AutoSize
