# Define output file
$OutputFile = "AzureVMDetails.csv"

# Define Resource Groups (Modify this list)
$ResourceGroups = @("RG1", "RG2", "RG3")  # <-- Replace with actual resource groups

# Login to Azure
Connect-AzAccount

# Initialize an array to store VM details
$VMData = @()

# Loop through each resource group
foreach ($ResourceGroup in $ResourceGroups) {
    Write-Host "Checking Resource Group: $ResourceGroup..."

    # Get Subscription ID for the Resource Group
    $ResourceGroupDetails = Get-AzResourceGroup -Name $ResourceGroup -ErrorAction SilentlyContinue

    if (-not $ResourceGroupDetails) {
        Write-Host "ERROR: Resource Group '$ResourceGroup' not found. Skipping..."
        continue
    }

    $SubscriptionId = $ResourceGroupDetails.SubscriptionId

    # Check if we have access to the subscription before switching
    $AccessibleSubscriptions = Get-AzSubscription | Select-Object -ExpandProperty SubscriptionId

    if ($SubscriptionId -notin $AccessibleSubscriptions) {
        Write-Host "ERROR: No access to Subscription '$SubscriptionId'. Skipping Resource Group '$ResourceGroup'..."
        continue
    }

    # Set Subscription Context (if different from current)
    if ($SubscriptionId -ne (Get-AzContext).Subscription.Id) {
        Write-Host "Switching to Subscription: $SubscriptionId"
        Set-AzContext -SubscriptionId $SubscriptionId | Out-Null
    }

    # Get all VMs in the resource group
    $VMs = Get-AzVM -ResourceGroupName $ResourceGroup -ErrorAction SilentlyContinue

    if (-not $VMs) {
        Write-Host "No VMs found in Resource Group: $ResourceGroup"
        continue
    }

    foreach ($VM in $VMs) {
        $VMName = $VM.Name
        $VMSize = $VM.HardwareProfile.VmSize

        # Get VM Size details (vCPUs, Memory)
        $VMSizeDetails = Get-AzVMSize -Location $VM.Location | Where-Object { $_.Name -eq $VMSize }
        $vCPUs = $VMSizeDetails.NumberOfCores
        $MemoryGB = [math]::Round($VMSizeDetails.MemoryInMB / 1024, 2)

        # Get CPU Utilization (Last 1 Hour Average)
        $CPUUtilization = (Get-AzMetric -ResourceId $VM.Id -MetricName "Percentage CPU" -TimeGrain 00:01:00 -AggregationType Average -ErrorAction SilentlyContinue).Data.Average
        if (-not $CPUUtilization) { $CPUUtilization = "N/A" }

        # Get OS Disk Name
        $OSDisk = $VM.StorageProfile.OsDisk.Name

        # Get Data Disks (comma-separated)
        $DataDisks = $VM.StorageProfile.DataDisks | Select-Object -ExpandProperty Name -ErrorAction SilentlyContinue
        if ($DataDisks) { $DataDisks = $DataDisks -join ", " } else { $DataDisks = "None" }

        # Store VM details
        $VMData += [PSCustomObject]@{
            "VM Name" = $VMName
            "Resource Group" = $ResourceGroup
            "Subscription ID" = $SubscriptionId
            "Size" = $VMSize
            "vCPUs" = $vCPUs
            "Memory (GB)" = $MemoryGB
            "CPU Utilization (%)" = $CPUUtilization
            "OS Disk" = $OSDisk
            "Data Disks" = $DataDisks
        }
    }
}

# Export to CSV
$VMData | Export-Csv -Path $OutputFile -NoTypeInformation

Write-Host "Export completed! Data saved in: $OutputFile"
