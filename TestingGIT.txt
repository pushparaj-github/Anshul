sudo apt update && sudo apt install jq wget curl -y


*******
export NEXUS_URL="http://nexus.example.com"
export NEXUS_REPO="your-nexus-repo"
export NEXUS_USER="your-nexus-username"
export NEXUS_PASS="your-nexus-password"

export GITLAB_PROJECT_ID="123456"
export GITLAB_REGISTRY_URL="https://gitlab.com/api/v4/projects/${GITLAB_PROJECT_ID}/packages/npm/"
export GITLAB_USER="your-gitlab-username"
export GITLAB_TOKEN="your-gitlab-access-token"
**********
****migrate_packages.sh


#!/bin/bash

# Set directories
DOWNLOAD_DIR="./nexus-packages"
LOG_FILE="uploaded_packages.log"
MAX_UPLOADS=5  # Stop after 5 uploads for testing

mkdir -p "$DOWNLOAD_DIR"

# Fetch package list from Nexus
echo "Fetching package list from Nexus..."
curl -u "$NEXUS_USER:$NEXUS_PASS" -X GET "$NEXUS_URL/service/rest/v1/assets?repository=$NEXUS_REPO" | jq -r '.items[].downloadUrl' > package_list.txt

# Download all packages
echo "Downloading packages from Nexus..."
wget -i package_list.txt -P "$DOWNLOAD_DIR"

UPLOAD_COUNT=0
echo "Uploading up to $MAX_UPLOADS packages to GitLab NuGet Registry..."

# Find all .nupkg files inside subdirectories
find "$DOWNLOAD_DIR" -type f -name "*.nupkg" | while read package; do
    # Extract Package Name and Version from the path structure
    PACKAGE_PATH=$(dirname "$package")
    PACKAGE_NAME=$(basename "$(dirname "$PACKAGE_PATH")")  # Gets the PACKAGE_NAME
    PACKAGE_VERSION=$(basename "$PACKAGE_PATH")  # Gets VERSION_1.1
    
    echo "Processing package: $PACKAGE_NAME - Version: $PACKAGE_VERSION"

    # Upload to GitLab NuGet registry
    curl --header "JOB-TOKEN: $GITLAB_TOKEN" --upload-file "$package" \
         "$GITLAB_REGISTRY_URL/api/v4/projects/$GITLAB_PROJECT_ID/packages/nuget/v3/index.json"

    echo "Uploaded: $PACKAGE_NAME - Version: $PACKAGE_VERSION" >> "$LOG_FILE"

    # Remove uploaded package to save space
    rm -f "$package"

    # Stop after 5 uploads for testing
    ((UPLOAD_COUNT++))
    if [[ $UPLOAD_COUNT -ge $MAX_UPLOADS ]]; then
        echo "Test limit reached: Uploaded $MAX_UPLOADS packages. Stopping."
        break
    fi
done

echo "Migration completed! Log saved in $LOG_FILE."


********
chmod +x migrate_packages.sh
*******
./migrate_packages.sh
****
