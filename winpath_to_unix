*******ConvertToUnixPath.ps1:

Add-Type -AssemblyName System.Windows.Forms

function Show-Toast {
    param (
        [string]$title,
        [string]$message
    )

    [Windows.UI.Notifications.ToastNotificationManager, Windows.UI.Notifications, ContentType = WindowsRuntime] | Out-Null
    [Windows.Data.Xml.Dom.XmlDocument, Windows.Data.Xml.Dom.XmlDocument, ContentType = WindowsRuntime] | Out-Null

    $template = @"
<toast>
  <visual>
    <binding template='ToastGeneric'>
      <text>$title</text>
      <text>$message</text>
    </binding>
  </visual>
</toast>
"@

    $xml = New-Object Windows.Data.Xml.Dom.XmlDocument
    $xml.LoadXml($template)

    $toast = [Windows.UI.Notifications.ToastNotification]::new($xml)
    $notifier = [Windows.UI.Notifications.ToastNotificationManager]::CreateToastNotifier("PathConverter")
    $notifier.Show($toast)
}

# Input can come from clipboard or drag-and-drop
param([string]$inputPath)

if (-not $inputPath) {
    $inputPath = Get-Clipboard
}

$convertedPath = $null

function Convert-WindowsToUnix {
    param ($path)
    $path = $path.Trim()
    if ($path -match '^([A-Za-z]):\\') {
        $drive = $matches[1].ToLower()
        $rest = $path.Substring(2) -replace '\\', '/'
        return "/mnt/$drive$rest"
    }
    return $null
}

function Convert-UnixToWindows {
    param ($path)
    $path = $path.Trim()

    if ($path -match '^/mnt/([a-z])(/.*)') {
        $drive = $matches[1].ToUpper()
        $rest = $matches[2] -replace '/', '\'
        return "$drive:`$rest"
    }

    if ($path -match '^/([a-z])(/.*)') {
        $drive = $matches[1].ToUpper()
        $rest = $matches[2] -replace '/', '\'
        return "$drive:`$rest"
    }

    return $null
}

# Detect type and convert accordingly
if ($inputPath -match '^([A-Za-z]):\\') {
    # Clearly Windows style path
    $convertedPath = Convert-WindowsToUnix -path $inputPath
    Set-Clipboard -Value $convertedPath
    Show-Toast -title "✅ Windows → Unix Path" -message "$convertedPath"
}
elseif ($inputPath -match '^/mnt/[a-z]/' -or $inputPath -match '^/[a-z]/') {
    # Clearly Unix-style path
    $convertedPath = Convert-UnixToWindows -path $inputPath
    Set-Clipboard -Value $convertedPath
    Show-Toast -title "✅ Unix → Windows Path" -message "$convertedPath"
}
else {
    Show-Toast -title "⚠️ Invalid Path" -message "Input is not a valid Windows or Unix path."
}

************

Create a shortcut with this target:
powershell.exe -WindowStyle Hidden -ExecutionPolicy Bypass -File "C:\Path\To\ConvertToUnixPath.ps1"

******

