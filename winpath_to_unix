*******ConvertToUnixPath.ps1:

Add-Type -AssemblyName System.Windows.Forms

function Show-Toast {
    param (
        [string]$title,
        [string]$message
    )

    [Windows.UI.Notifications.ToastNotificationManager, Windows.UI.Notifications, ContentType = WindowsRuntime] | Out-Null
    [Windows.Data.Xml.Dom.XmlDocument, Windows.Data.Xml.Dom.XmlDocument, ContentType = WindowsRuntime] | Out-Null

    $template = @"
<toast>
  <visual>
    <binding template='ToastGeneric'>
      <text>$title</text>
      <text>$message</text>
    </binding>
  </visual>
</toast>
"@

    $xml = New-Object Windows.Data.Xml.Dom.XmlDocument
    $xml.LoadXml($template)

    $toast = [Windows.UI.Notifications.ToastNotification]::new($xml)
    $notifier = [Windows.UI.Notifications.ToastNotificationManager]::CreateToastNotifier("PathConverter")
    $notifier.Show($toast)
}

# Get clipboard content
$clipboardText = Get-Clipboard

# Check if it's a valid file or directory path
if ([System.IO.File]::Exists($clipboardText) -or [System.IO.Directory]::Exists($clipboardText)) {
    # Convert to Unix path
    $unixPath = $clipboardText

    if ($unixPath -match '^([A-Za-z]):') {
        $driveLetter = $matches[1].ToLower()
        $unixPath = "/$driveLetter" + $clipboardText.Substring(2)
    }

    $unixPath = $unixPath -replace '\\', '/'

    # Copy to clipboard
    Set-Clipboard -Value $unixPath

    # Show success toast
    Show-Toast -title "✅ Path Converted" -message "$unixPath"
}
else {
    Show-Toast -title "⚠️ Invalid Path" -message "Clipboard does not contain a valid file or folder path."
}



************

Create a shortcut with this target:
powershell.exe -WindowStyle Hidden -ExecutionPolicy Bypass -File "C:\Path\To\ConvertToUnixPath.ps1"

******

